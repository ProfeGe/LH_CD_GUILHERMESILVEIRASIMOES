{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "098a0d88-316b-4a48-87ae-f9e83861f687",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.read_csv(r\"C:\\Users\\Guilherme Simoes\\Downloads\\teste_indicium_precificacao.csv\", \n",
    "                 sep=\",\", \n",
    "                 encoding='utf-8-sig', \n",
    "                 header=0, \n",
    "                 dtype={'latitude': float, 'longitude': float, 'price': float, 'minimo_noites': int, \n",
    "                        'numero_de_reviews': int, 'ultima_review': str, 'reviews_por_mes': float,\n",
    "                        'calculado_host_listings_count': int, 'disponibilidade_365': int, 'id': int})\n",
    "df.fillna(0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9e41d9b8-de46-4bb8-8f72-934ba558bea0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.linear_model import LinearRegression\n",
    "# Escolhido Regressão Linear pois valor-saída é numérico.\n",
    "import numpy as np\n",
    "# Separado room_type pois cada uma das categorias tem precificação diferente, e como é uma variável qualitativa, preferi não atribuir valores numéricos a ela\n",
    "room_types = df['room_type'].unique()\n",
    "\n",
    "models = {}\n",
    "# Modelagem utilizou os critérios baseados nos dados obtidos via análises do PowerBI\n",
    "for room_type in room_types:\n",
    "    df_filtered = df[df['room_type'] == room_type]\n",
    "    X = df_filtered[['latitude', 'longitude', 'disponibilidade_365', 'calculado_host_listings_count', 'reviews_por_mes']]\n",
    "    y = df_filtered['price']\n",
    "    \n",
    "    model = LinearRegression()\n",
    "    model.fit(X.values, y)\n",
    "    models[room_type] = model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "bdae4a69-33b8-43b3-81f6-f57a758fcc2b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Preço previsto para 'Entire home/apt': 327.4777603868133\n"
     ]
    }
   ],
   "source": [
    "# Predição para preço solicitado\n",
    "# Adicionar dados, na ordem: Latitude, Longitude, Disponibilidade Ano, Calculado Host, Reviews por Mês\n",
    "apartamentoTeste = np.array([[40.7128, -74.0060, 355, 2, 0.38]])\n",
    "# Escolher o tipo de apartamento desejado (no caso, Entire Home/apt)\n",
    "predicao_apt = models['Entire home/apt'].predict(apartamentoTeste)\n",
    "print(f\"Preço previsto para 'Entire home/apt': {predicao_apt[0]}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "16225fb6-6b30-4792-97a5-ee348ff68a86",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "with open('predicao_apt_LH_CD_Guilherme_Silveira_Simoes.pkl', 'wb') as file:\n",
    "    pickle.dump(models, file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "59f0e766-03bd-46af-ac03-aee8ce30d394",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.20"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
